{"version":3,"sources":["../src/memory_record.js"],"names":["MemoryRecord","records","_values","undefined","_keys_hash","_codes_hash","_keys","_codes","_names","_records","columns","values","reduce","a","e","forEach","v","column","Error","name","join","key","codes_hash","keys_hash","element","lookup","keys","codes","fetch","_","map","__source_records","i","index","code","memory_record_create_index_or","define","attributes","Object","defineProperty","value","writable","enumerable","configurable","forIn","k","toString","process","argv","__filename","Foo","console","log","record"],"mappings":"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","file":"memory_record.js","sourcesContent":["// Example.\n//\n//   import MemoryRecord from \"./memory_record\"\n//\n//   class Foo extends MemoryRecord {\n//     static get define() {\n//       return [\n//         { key: \"black\", name: '☗', },\n//         { key: \"white\", name: '☖', },\n//       ]\n//     }\n//\n//     get flip() {\n//       return Foo.values[(this.code + 1) % Foo.values.length]\n//     }\n//   }\n//\n//   Foo.lookup(\"black\").key           // => \"black\"\n//   Foo.lookup(1).key                 // => \"white\"\n//   Foo.values[0] === Foo.values[0]   // => true\n//\n\nimport _ from \"lodash\"\n\nexport default class MemoryRecord {\n  static get define() {\n    throw new Error(`${this.name}.define() is not implemented`)\n  }\n\n  static memory_record_reset(records) {\n    this._values     = undefined\n    this._keys_hash  = undefined\n    this._codes_hash = undefined\n    this._keys       = undefined\n    this._codes      = undefined\n    this._names      = undefined\n\n    this._records = records\n\n    return this\n  }\n\n  static memory_record_create_index_or(columns) {\n    return this.values.reduce((a, e) => {\n      columns.forEach(column => {\n        const v = e[column]\n        if (v != null) {\n          if (v in a) {\n            throw new Error([\n              `${this.name}#${column} ${JSON.stringify(v)} is duplicate`,\n              `Existing: ${JSON.stringify(Object.keys(a))}`,\n              `Conflict: ${JSON.stringify(e)}`,\n            ].join(\"\\n\"))\n          }\n          a[v] = e\n        }\n      })\n      return a\n    }, {})\n  }\n\n  static lookup(key) {\n    if (key instanceof this) {\n      return key\n    }\n    if (typeof key === \"number\") {\n      return this.codes_hash[key]\n    } else {\n      return this.keys_hash[key]\n    }\n  }\n\n  static fetch(key) {\n    const element = this.lookup(key)\n    if (!element) {\n      throw new Error([\n        `${this.name}.fetch(${JSON.stringify(key)}) does not match anything`,\n        `keys: ${JSON.stringify(this.keys)}`,\n        `codes: ${JSON.stringify(this.codes)}`,\n      ].join(\"\\n\"))\n    }\n    return element\n  }\n\n  static fetch_if(key) {\n    if (key != null) {\n      return this.fetch(key)\n    }\n  }\n\n  static get values() {\n    if (this._values !== undefined) {\n      return this._values\n    }\n    this._values = _.map(this.__source_records, (e, i) => {\n      e = Object.assign({}, e, {index: i})\n      if (!(\"code\" in e)) {\n        e = Object.assign({}, e, {code: i})\n      }\n      if (!(\"key\" in e)) {\n        e = Object.assign({}, e, {key: `_key${i}`})\n      }\n      return Object.freeze(new this(e))\n    })\n    return this._values\n  }\n\n  static get keys_hash() {\n    if (this._keys_hash != null) {\n      return this._keys_hash\n    }\n    this._keys_hash = this.memory_record_create_index_or([\"key\"])\n    return this._keys_hash\n  }\n\n  static get codes_hash() {\n    if (this._codes_hash != null) {\n      return this._codes_hash\n    }\n    this._codes_hash = this.memory_record_create_index_or([\"code\"])\n    return this._codes_hash\n  }\n\n  static get keys() {\n    if (this._keys != null) {\n      return this._keys\n    }\n    this._keys = Object.keys(this.keys_hash)\n    return this._keys\n  }\n\n  static get codes() {\n    if (this._codes != null) {\n      return this._codes\n    }\n    this._codes = this.values.map(e => e.code)\n    return this._codes\n  }\n\n  static get names() {\n    if (this._names != null) {\n      return this._names\n    }\n    this._names = this.values.map(e => e.name)\n    return this._names\n  }\n\n  // private\n  static get __source_records() {\n    if (this._records != null) {\n      return this._records\n    }\n    this._records = this.define\n    return this._records\n  }\n\n  constructor(attributes) {\n    Object.defineProperty(this, \"attributes\", {value: attributes, writable: false, enumerable: false, configurable: false})\n\n    _.forIn(attributes, (e, k) => {\n      Object.defineProperty(this, k, {value: e, writable: false, enumerable: true, configurable: false})\n    })\n\n    // If name is not defined, it returns string converted from key\n    // In the case of this.hasOwnProperty (\"name\") see parents. Parents also look at in.\n    if (!(\"name\" in this)) {\n      Object.defineProperty(this, \"name\", {value: attributes.name || attributes.key.toString(), writable: false, enumerable: true, configurable: false})\n    }\n  }\n}\n\nif (process.argv[1] === __filename) {\n  class Foo extends MemoryRecord {\n    static get define() {\n      return [\n        { key: \"black\", name: '☗', },\n        { key: \"white\", name: '☖', },\n        { code: 7, },\n      ]\n    }\n  }\n\n  console.log(Foo.keys)\n  console.log(Foo.codes)\n\n  const record = Foo.values[0]\n  console.log(record.key)\n  console.log(record.code)\n  console.log(record.name)\n\n  console.log(Foo.values)\n  console.log(Foo.lookup(\"black\").name)\n  console.log(Foo.lookup(\"black\").code)\n\n  console.log(Foo.lookup(\"_key2\").name)\n\n  let v = Foo.lookup(\"black\")\n  console.log(v instanceof Foo)\n\n  console.log(Foo.lookup(0))\n  console.log(Foo.lookup(1))\n  console.log(Foo.lookup(2))\n\n  console.log(Foo.values[0] === Foo.values[0])\n\n  console.log(Foo.values.map(e => e.key))\n  console.log(Object.keys(Foo.keys_hash))\n  console.log(Foo.fetch('unknown'))\n}\n"]}