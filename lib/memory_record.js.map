{"version":3,"sources":["../src/memory_record.js"],"names":["MemoryRecord","records","_values","undefined","_keys_hash","_codes_hash","_keys","_codes","_names","_records","key","codes_hash","keys_hash","element","lookup","Error","name","keys","codes","join","_","map","__source_records","e","i","index","code","reduce","values","a","define","attributes","Object","defineProperty","value","writable","enumerable","configurable","forIn","k","toString","process","argv","__filename","Foo","console","log","record","v","fetch"],"mappings":"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","file":"memory_record.js","sourcesContent":["// Example.\n//\n//   import MemoryRecord from \"./memory_record\"\n//\n//   class Foo extends MemoryRecord {\n//     static get define() {\n//       return [\n//         { key: \"black\", name: '☗', },\n//         { key: \"white\", name: '☖', },\n//       ]\n//     }\n//\n//     get flip() {\n//       return Foo.values[(this.code + 1) % Foo.values.length]\n//     }\n//   }\n//\n//   Foo.lookup(\"black\").key           // => \"black\"\n//   Foo.lookup(1).key                 // => \"white\"\n//   Foo.values[0] === Foo.values[0]   // => true\n//\n\nimport _ from \"lodash\"\n\nexport default class MemoryRecord {\n  static get define() {\n    throw new Error(`${this.name}.define() is not implemented`)\n  }\n\n  static memory_record_reset(records) {\n    this._values     = undefined\n    this._keys_hash  = undefined\n    this._codes_hash = undefined\n    this._keys       = undefined\n    this._codes      = undefined\n    this._names      = undefined\n\n    this._records = records\n\n    return this\n  }\n\n  static lookup(key) {\n    if (key instanceof this) {\n      return key\n    }\n    if (typeof key === \"number\") {\n      return this.codes_hash[key]\n    } else {\n      return this.keys_hash[key]\n    }\n  }\n\n  static fetch(key) {\n    const element = this.lookup(key)\n    if (!element) {\n      throw new Error([\n        `${this.name}.fetch(${JSON.stringify(key)}) does not match anything`,\n        `keys: ${JSON.stringify(this.keys)}`,\n        `codes: ${JSON.stringify(this.codes)}`,\n      ].join(\"\\n\"))\n    }\n    return element\n  }\n\n  static get values() {\n    if (this._values !== undefined) {\n      return this._values\n    }\n    this._values = _.map(this.__source_records, (e, i) => {\n      e = Object.assign({}, e, {index: i})\n      if (!(\"code\" in e)) {\n        e = Object.assign({}, e, {code: i})\n      }\n      if (!(\"key\" in e)) {\n        e = Object.assign({}, e, {key: `_key${i}`})\n      }\n      return Object.freeze(new this(e))\n    })\n    return this._values\n  }\n\n  static get keys_hash() {\n    if (this._keys_hash !== undefined) {\n      return this._keys_hash\n    }\n    this._keys_hash = _.reduce(this.values, (a, e) => { // http://devdocs.io/lodash~4/index#reduce\n      if (e.key in a) {\n        throw new Error([\n          `${this.name}#key ${JSON.stringify(e.key)} is duplicate`,\n          `Existing: ${JSON.stringify(Object.keys(a))}`,\n          `Conflict: ${JSON.stringify(e)}`,\n        ].join(\"\\n\"))\n      }\n      a[e.key] = e\n      return a\n    }, {})\n    return this._keys_hash\n  }\n\n  static get codes_hash() {\n    if (this._codes_hash !== undefined) {\n      return this._codes_hash\n    }\n    this._codes_hash = _.reduce(this.values, (a, e) => { // http://devdocs.io/lodash~4/index#reduce\n      if (e.code in a) {\n        throw new Error([\n          `${this.name}#code ${JSON.stringify(e.code)} is duplicate`,\n          `Existing: ${JSON.stringify(Object.keys(a))}`,\n          `Conflict: ${JSON.stringify(e)}`,\n        ].join(\"\\n\"))\n      }\n      a[e.code] = e\n      return a\n    }, {})\n    return this._codes_hash\n  }\n\n  static get keys() {\n    if (this._keys !== undefined) {\n      return this._keys\n    }\n    this._keys = Object.keys(this.keys_hash)\n    return this._keys\n  }\n\n  static get codes() {\n    if (this._codes !== undefined) {\n      return this._codes\n    }\n\n    // In case of Object.keys(this.codes_hash) code becomes a character string\n    this._codes = this.values.map(e => e.code)\n    return this._codes\n  }\n\n  static get names() {\n    if (this._names !== undefined) {\n      return this._names\n    }\n    this._names = this.values.map(e => e.name)\n    return this._names\n  }\n\n  // private\n  static get __source_records() {\n    if (this._records !== undefined) {\n      return this._records\n    }\n    this._records = this.define\n    return this._records\n  }\n\n  constructor(attributes) {\n    Object.defineProperty(this, \"attributes\", {value: attributes, writable: false, enumerable: false, configurable: false})\n\n    _.forIn(attributes, (e, k) => {\n      Object.defineProperty(this, k, {value: e, writable: false, enumerable: true, configurable: false})\n    })\n\n    // If name is not defined, it returns string converted from key\n    // In the case of this.hasOwnProperty (\"name\") see parents. Parents also look at in.\n    if (!(\"name\" in this)) {\n      Object.defineProperty(this, \"name\", {value: attributes.name || attributes.key.toString(), writable: false, enumerable: true, configurable: false})\n    }\n  }\n}\n\nif (process.argv[1] === __filename) {\n  class Foo extends MemoryRecord {\n    static get define() {\n      return [\n        { key: \"black\", name: '☗', },\n        { key: \"white\", name: '☖', },\n        { code: 7, },\n      ]\n    }\n  }\n\n  console.log(Foo.keys)\n  console.log(Foo.codes)\n\n  const record = Foo.values[0]\n  console.log(record.key)\n  console.log(record.code)\n  console.log(record.name)\n\n  console.log(Foo.values)\n  console.log(Foo.lookup(\"black\").name)\n  console.log(Foo.lookup(\"black\").code)\n\n  console.log(Foo.lookup(\"_key2\").name)\n\n  let v = Foo.lookup(\"black\")\n  console.log(v instanceof Foo)\n\n  console.log(Foo.lookup(0))\n  console.log(Foo.lookup(1))\n  console.log(Foo.lookup(2))\n\n  console.log(Foo.values[0] === Foo.values[0])\n\n  console.log(Foo.values.map(e => e.key))\n  console.log(Object.keys(Foo.keys_hash))\n  console.log(Foo.fetch('unknown'))\n}\n"]}